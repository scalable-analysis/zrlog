/* @generated */
digraph cfg {
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_1" [label="1: Start void ParseUtil.getAllTextNode(List,List)\nFormals:  nodes:java.util.List* nodeList:java.util.List*\nLocals:  $irvar8:void $irvar7:void $irvar6:void $irvar5:void $irvar4:void $irvar3:void $irvar2:void $irvar1:void $irvar0:void $bcvar2:void node:org.jsoup.nodes.Node* \n  " color=yellow style=filled]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_1" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_4" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_2" [label="2: Exit void ParseUtil.getAllTextNode(List,List) \n  " color=yellow style=filled]
	

"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [label="3:  exceptions sink \n   NULLIFY(&$irvar3); [line 63]\n  NULLIFY(&$bcvar2); [line 63]\n  NULLIFY(&$irvar5); [line 63]\n  NULLIFY(&node); [line 63]\n  NULLIFY(&$irvar4); [line 63]\n  NULLIFY(&$irvar7); [line 63]\n  NULLIFY(&$irvar6); [line 63]\n  NULLIFY(&$irvar0); [line 63]\n  NULLIFY(&$irvar1); [line 63]\n  NULLIFY(&$irvar2); [line 63]\n  EXIT_SCOPE($irvar3,$bcvar2,$irvar5,node,$irvar4,$irvar7,$irvar6,$irvar0,$irvar1,$irvar2); [line 63]\n  APPLY_ABSTRACTION; [line 63]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_2" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_4" [label="4:  Call Iterator List.iterator() \n   n$0=*&nodes:java.util.List* [line 52]\n  _=*n$0:java.util.List*(root java.util.List) [line 52]\n  n$2=_fun_Iterator List.iterator()(n$0:java.util.List*) interface virtual [line 52]\n  *&$bcvar2:java.util.Iterator*=n$2 [line 52]\n  NULLIFY(&nodes); [line 52]\n  EXIT_SCOPE(_,n$0,n$2,nodes); [line 52]\n  APPLY_ABSTRACTION; [line 52]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_4" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_4" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" [label="5:  Call boolean Iterator.hasNext() \n   n$3=*&$bcvar2:java.util.Iterator* [line 52]\n  _=*n$3:java.util.Iterator*(root java.util.Iterator) [line 52]\n  n$5=_fun_boolean Iterator.hasNext()(n$3:java.util.Iterator*) interface virtual [line 52]\n  *&$irvar0:_Bool=n$5 [line 52]\n  EXIT_SCOPE(_,n$3,n$5); [line 52]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_8" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_6" [label="6: Prune (true branch, if) \n   n$6=*&$irvar0:_Bool [line 52]\n  PRUNE(!(n$6 == 0), true); [line 52]\n  NULLIFY(&$irvar0); [line 52]\n  EXIT_SCOPE(n$6,$irvar0); [line 52]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_6" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_9" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_6" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_7" [label="7: Prune (false branch, if) \n   n$6=*&$irvar0:_Bool [line 52]\n  PRUNE((n$6 == 0), false); [line 52]\n  NULLIFY(&$bcvar2); [line 52]\n  NULLIFY(&$irvar0); [line 52]\n  EXIT_SCOPE(n$6,$bcvar2,$irvar0); [line 52]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_7" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_28" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_7" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_8" [label="8: + \n  " ]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_8" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_6" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_8" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_7" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_9" [label="9:  Call Object Iterator.next() \n   n$7=*&$bcvar2:java.util.Iterator* [line 52]\n  _=*n$7:java.util.Iterator*(root java.util.Iterator) [line 52]\n  n$9=_fun_Object Iterator.next()(n$7:java.util.Iterator*) interface virtual [line 52]\n  *&$irvar1:java.lang.Object*=n$9 [line 52]\n  EXIT_SCOPE(_,n$7,n$9); [line 52]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_9" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_10" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_9" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_10" [label="10:  method_body \n   n$10=*&$irvar1:java.lang.Object* [line 52]\n  n$11=_fun___cast(n$10:java.lang.Object*,sizeof(t=org.jsoup.nodes.Node;sub_t=( sub )(cast)):void) [line 52]\n  *&node:org.jsoup.nodes.Node*=n$11 [line 52]\n  NULLIFY(&$irvar1); [line 52]\n  EXIT_SCOPE(n$10,n$11,$irvar1); [line 52]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_10" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_11" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_10" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_11" [label="11:  Call List Node.childNodes() \n   n$12=*&node:org.jsoup.nodes.Node* [line 53]\n  _=*n$12:org.jsoup.nodes.Node*(root org.jsoup.nodes.Node) [line 53]\n  n$14=_fun_List Node.childNodes()(n$12:org.jsoup.nodes.Node*) virtual [line 53]\n  *&$irvar2:java.util.List*=n$14 [line 53]\n  EXIT_SCOPE(_,n$12,n$14); [line 53]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_11" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_12" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_11" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_12" [label="12:  Call boolean List.isEmpty() \n   n$15=*&$irvar2:java.util.List* [line 53]\n  _=*n$15:java.util.List*(root java.util.List) [line 53]\n  n$17=_fun_boolean List.isEmpty()(n$15:java.util.List*) interface virtual [line 53]\n  *&$irvar3:_Bool=n$17 [line 53]\n  NULLIFY(&$irvar2); [line 53]\n  EXIT_SCOPE(_,n$15,n$17,$irvar2); [line 53]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_12" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_15" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_12" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_13" [label="13: Prune (true branch, if) \n   n$18=*&$irvar3:_Bool [line 53]\n  PRUNE(!(n$18 != 0), true); [line 53]\n  NULLIFY(&$irvar3); [line 53]\n  EXIT_SCOPE(n$18,$irvar3); [line 53]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_13" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_16" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_13" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_14" [label="14: Prune (false branch, if) \n   n$18=*&$irvar3:_Bool [line 53]\n  PRUNE((n$18 != 0), false); [line 53]\n  NULLIFY(&$irvar3); [line 53]\n  EXIT_SCOPE(n$18,$irvar3); [line 53]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_14" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_20" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_14" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_15" [label="15: + \n  " ]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_15" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_13" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_15" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_14" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_16" [label="16:  Call List Node.childNodes() \n   n$19=*&node:org.jsoup.nodes.Node* [line 54]\n  _=*n$19:org.jsoup.nodes.Node*(root org.jsoup.nodes.Node) [line 54]\n  n$21=_fun_List Node.childNodes()(n$19:org.jsoup.nodes.Node*) virtual [line 54]\n  *&$irvar4:java.util.List*=n$21 [line 54]\n  NULLIFY(&node); [line 54]\n  EXIT_SCOPE(_,n$19,n$21,node); [line 54]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_16" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_17" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_16" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_17" [label="17:  Call void ParseUtil.getAllTextNode(List,List) \n   n$22=*&$irvar4:java.util.List* [line 54]\n  n$23=*&nodeList:java.util.List* [line 54]\n  n$24=_fun_void ParseUtil.getAllTextNode(List,List)(n$22:java.util.List*,n$23:java.util.List*) [line 54]\n  NULLIFY(&$irvar4); [line 54]\n  EXIT_SCOPE(n$22,n$23,n$24,$irvar4); [line 54]\n  APPLY_ABSTRACTION; [line 54]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_17" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_17" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_18" [label="18: Prune (true branch, if) \n   n$25=*&node:org.jsoup.nodes.Node* [line 56]\n  n$26=_fun___instanceof(n$25:org.jsoup.nodes.Node*,sizeof(t=org.jsoup.nodes.TextNode;sub_t=( sub )(instof)):void) [line 56]\n  PRUNE(!(n$26 == 0), true); [line 56]\n  EXIT_SCOPE(n$25,n$26); [line 56]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_18" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_21" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_18" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_19" [label="19: Prune (false branch, if) \n   n$25=*&node:org.jsoup.nodes.Node* [line 56]\n  n$26=_fun___instanceof(n$25:org.jsoup.nodes.Node*,sizeof(t=org.jsoup.nodes.TextNode;sub_t=( sub )(instof)):void) [line 56]\n  PRUNE((n$26 == 0), false); [line 56]\n  NULLIFY(&node); [line 56]\n  EXIT_SCOPE(n$25,n$26,node); [line 56]\n  APPLY_ABSTRACTION; [line 56]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_19" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_19" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_20" [label="20: + \n  " ]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_20" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_18" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_20" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_19" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_21" [label="21:  Call String TextNode.text() \n   n$27=*&node:org.jsoup.nodes.Node* [line 57]\n  n$28=_fun___cast(n$27:org.jsoup.nodes.Node*,sizeof(t=org.jsoup.nodes.TextNode;sub_t=( sub )(cast)):void) [line 57]\n  _=*n$28:org.jsoup.nodes.TextNode*(root org.jsoup.nodes.TextNode) [line 57]\n  n$30=_fun_String TextNode.text()(n$28:org.jsoup.nodes.TextNode*) virtual [line 57]\n  *&$irvar5:java.lang.String*=n$30 [line 57]\n  EXIT_SCOPE(_,n$27,n$28,n$30); [line 57]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_21" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_22" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_21" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_22" [label="22:  Call String String.trim() \n   n$31=*&$irvar5:java.lang.String* [line 57]\n  _=*n$31:java.lang.String*(root java.lang.String) [line 57]\n  n$33=_fun_String String.trim()(n$31:java.lang.String*) virtual [line 57]\n  *&$irvar6:java.lang.String*=n$33 [line 57]\n  NULLIFY(&$irvar5); [line 57]\n  EXIT_SCOPE(_,n$31,n$33,$irvar5); [line 57]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_22" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_23" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_22" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_23" [label="23:  Call int String.length() \n   n$34=*&$irvar6:java.lang.String* [line 57]\n  _=*n$34:java.lang.String*(root java.lang.String) [line 57]\n  n$36=_fun_int String.length()(n$34:java.lang.String*) virtual [line 57]\n  *&$irvar7:int=n$36 [line 57]\n  NULLIFY(&$irvar6); [line 57]\n  EXIT_SCOPE(_,n$34,n$36,$irvar6); [line 57]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_23" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_26" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_23" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_24" [label="24: Prune (true branch, if) \n   n$37=*&$irvar7:int [line 57]\n  PRUNE(!(n$37 <= 0), true); [line 57]\n  NULLIFY(&$irvar7); [line 57]\n  EXIT_SCOPE(n$37,$irvar7); [line 57]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_24" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_27" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_24" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_25" [label="25: Prune (false branch, if) \n   n$37=*&$irvar7:int [line 57]\n  PRUNE((n$37 <= 0), false); [line 57]\n  NULLIFY(&node); [line 57]\n  NULLIFY(&$irvar7); [line 57]\n  EXIT_SCOPE(n$37,node,$irvar7); [line 57]\n  APPLY_ABSTRACTION; [line 57]\n " shape="invhouse"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_25" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_25" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_26" [label="26: + \n  " ]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_26" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_24" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_26" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_25" ;
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_27" [label="27:  Call boolean List.add(Object) \n   n$38=*&nodeList:java.util.List* [line 58]\n  _=*n$38:java.util.List*(root java.util.List) [line 58]\n  n$40=*&node:org.jsoup.nodes.Node* [line 58]\n  n$41=_fun_boolean List.add(Object)(n$38:java.util.List*,n$40:org.jsoup.nodes.Node*) interface virtual [line 58]\n  *&$irvar8:_Bool=n$41 [line 58]\n  NULLIFY(&node); [line 58]\n  NULLIFY(&$irvar8); [line 58]\n  EXIT_SCOPE(_,n$38,n$40,n$41,node,$irvar8); [line 58]\n  APPLY_ABSTRACTION; [line 58]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_27" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_5" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_27" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
"com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_28" [label="28:  method_body \n   APPLY_ABSTRACTION; [line 63]\n " shape="box"]
	

	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_28" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_2" ;
	 "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_28" -> "com.zrlog.util.ParseUtil.getAllTextNode(java.util.List,java.util.List):void.636949c1dd15174810954431f86c50c9_3" [color="red" ];
}
